import{_ as e,c as o,o as c,V as t}from"./chunks/framework.494ce148.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"front/basic/逻辑判断优化.md","filePath":"front/basic/逻辑判断优化.md","lastUpdated":1691073737000}'),a={name:"front/basic/逻辑判断优化.md"},_=t("<ul><li>更少的嵌套，尽早<code>return</code> 。</li><li>倾向于使用对象或使用 <code>map</code> 结构来优化<code>if else</code>，而不是 <code>Switch</code>语句 。</li><li>多重判断时使用<code>Array.includes</code> 。</li><li>对 所有/部分 判断使用 <code>Array.every</code> &amp; <code>Array.some</code> 。</li><li>使用默认参数和解构 。</li><li>当一个项目中需要大量算法，大量匹配模式时可以考虑使用<code>策略模式</code>。</li></ul>",1),d=[_];function i(r,s,l,n,p,f){return c(),o("div",null,d)}const h=e(a,[["render",i]]);export{u as __pageData,h as default};
