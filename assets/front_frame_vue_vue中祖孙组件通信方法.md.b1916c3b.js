import{_ as e,c as a,o as t,U as r}from"./chunks/framework.72c98edf.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"front/frame/vue/vue中祖孙组件通信方法.md","filePath":"front/frame/vue/vue中祖孙组件通信方法.md"}'),o={name:"front/frame/vue/vue中祖孙组件通信方法.md"},s=r('<h2 id="祖孙通信" tabindex="-1">祖孙通信 <a class="header-anchor" href="#祖孙通信" aria-label="Permalink to &quot;祖孙通信&quot;">​</a></h2><h3 id="vuex" tabindex="-1"><a href="https://segmentfault.com/a/1190000040050182" target="_blank" rel="noreferrer"><code>Vuex</code></a> <a class="header-anchor" href="#vuex" aria-label="Permalink to &quot;[`Vuex`](https://segmentfault.com/a/1190000040050182)&quot;">​</a></h3><h3 id="events-bus" tabindex="-1"><a href="https://segmentfault.com/a/1190000039860587" target="_blank" rel="noreferrer"><code>Events Bus</code></a> <a class="header-anchor" href="#events-bus" aria-label="Permalink to &quot;[`Events Bus`](https://segmentfault.com/a/1190000039860587)&quot;">​</a></h3><h3 id="attrs-listens" tabindex="-1"><a href="https://segmentfault.com/a/1190000040317732" target="_blank" rel="noreferrer"><code>attrs</code> &amp;&amp; <code>$listens</code></a> <a class="header-anchor" href="#attrs-listens" aria-label="Permalink to &quot;[`attrs` &amp;&amp; `$listens`](https://segmentfault.com/a/1190000040317732)&quot;">​</a></h3><h4 id="定义" tabindex="-1">定义 <a class="header-anchor" href="#定义" aria-label="Permalink to &quot;定义&quot;">​</a></h4><p>官方定义：<a href="https://cn.vuejs.org/guide/components/attrs.html" target="_blank" rel="noreferrer"><code>$attr</code></a> &amp;&amp; <a href="https://v2.cn.vuejs.org/v2/api/#vm-listeners" target="_blank" rel="noreferrer"><code>$listeners</code></a></p><h4 id="例子" tabindex="-1">例子 <a class="header-anchor" href="#例子" aria-label="Permalink to &quot;例子&quot;">​</a></h4><p><code>$attr</code>:<code>$attrs</code>就是一个容器对象，这个容器对象会存放:父组件传过来的且子组件未使用<code>props</code>声明接收的数据</p><h4 id="逻辑" tabindex="-1">逻辑 <a class="header-anchor" href="#逻辑" aria-label="Permalink to &quot;逻辑&quot;">​</a></h4><p>爷组件传递给孙组件的逻辑流程就是，通过爷组件首先传递给父组件，当然父组件不在<code>props</code>中接收，那么爷组件传递给父组件的数据就会存放到父组件的<code>$attrs</code>对象中里面了，然后，再通过<code>v-bind=&quot;$attrs&quot;</code>，再把这个<code>$attr</code>传递给孙组件，在孙组件中使用<code>props</code>就能接收到<code>$attrs</code>中的数据了，这样就实现了，祖孙之间的数据传递</p><p>// $attrs一般搭配interitAttrs 一块使用 inheritAttrs: false, // 默认会继承在html标签上传递过来的数据，类似href属性的继承</p><h2 id="provide-inject" tabindex="-1"><a href="https://segmentfault.com/a/1190000020954324" target="_blank" rel="noreferrer"><code>Provide</code> &amp;&amp; <code>Inject</code></a> <a class="header-anchor" href="#provide-inject" aria-label="Permalink to &quot;[`Provide` &amp;&amp; `Inject`](https://segmentfault.com/a/1190000020954324)&quot;">​</a></h2>',12),n=[s];function c(d,l,h,i,m,p){return t(),a("div",null,n)}const _=e(o,[["render",c]]);export{f as __pageData,_ as default};
